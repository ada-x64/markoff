# The full prerequisites for this config are:
# - nightly rust: rustup toolchain install nightly
# - cranelift: rustup component add rustc-codegen-cranelift-preview --toolchain nightly
# - mold linker: https://github.com/rui314/mold#installation
# - sccache: https://github.com/mozilla/sccache#installation


[unstable]
codegen-backend = true

[profile]
incremental = true

[profile.dev]
codegen-backend = "cranelift"
debug = false

# Consider compiling deps with cranelift if you want cold-compilation to be faster
[profile.dev.package."*"]
codegen-backend = "llvm"

# cranelift is `panic = abort`, so you need to compile with llvm to get `#[should_panic]` working
[profile.test.package."*"]
codegen-backend = "llvm"

# Disable cranelift for release profile
[profile.release]
codegen-backend = "llvm"

# cranelift cannot build wasm32-unknown-unknown out of the box
[profile.web]
codegen-backend = "llvm"

[build]
# Requires setting `CARGO=1` or it breaks `Bevy CLI`: https://github.com/TheBevyFlock/bevy_cli/issues/429
rustc-wrapper = "/home/hhh/.cargo/bin/sccache"
# Using a global target dir allows all projects to share incremental compilation results,
# vastly speeding up cold-compilation of new projects.
target-dir = "/home/hhh/.cargo/global-target"

[target.x86_64-unknown-linux-gnu]
# Note: make sure you've installed dioxus CLI with
# cargo install dioxus-cli --git https://github.com/laundmo/dioxus --branch=subsecond-fuse-ld
# otherwise linker= and link-arg=-fuse-ld= won't work
linker = "clang"
rustflags = [
    "-C",
    "link-arg=-fuse-ld=mold",
    # Nightly
    "-Zshare-generics=y",
    "-Zthreads=8",
]
rustdocflags = [
    "-C",
    "link-arg=-fuse-ld=mold",
    # Nightly
    "-Zshare-generics=y",
    "-Zthreads=8",
]
